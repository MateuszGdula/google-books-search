{"version":3,"sources":["App.module.scss","components/form/Form.module.scss","assets/no-cover.jpg","components/search-results/ListItem.module.scss","Context.js","components/form/Form.js","components/search-results/ListItem.js","components/search-results/SearchResults.js","App.js","index.js"],"names":["module","exports","wrapper","form","__webpack_require__","p","listItem__wrapper","listItem__image","listItem__textWrapper","listItem__title","listItem__description","AppContext","React","createContext","clickBtn","document","querySelector","click","Form","react_default","a","createElement","Context","Consumer","context","className","styles","onSubmit","buildQueryString","type","placeholder","required","onChange","name","value","defaultChecked","ListItem","_ref","title","cover","description","link","href","target","rel","src","alt","length","concat","slice","defaultProps","noCover","SearchResults","Fragment","infoText","books","map","index","id","_ref$volumeInfo","volumeInfo","readingModes","imageLinks","infoLink","search_results_ListItem","key","toString","image","thumbnail","smallThumbnail","undefined","isLoading","initState","request","numberOfBooks","errorText","App","state","e","preventDefault","_this","setState","q","encodeURIComponent","orderBy","queryString","sendRequest","Axios","get","then","res","data","prevState","Object","toConsumableArray","items","totalItems","catch","error","message","setTimeout","getMoreData","contextElements","objectSpread","this","Provider","form_Form","search_results_SearchResults","_this2","window","addEventListener","console","log","Math","round","innerHeight","scrollY","body","offsetHeight","floor","Component","ReactDOM","render","src_App","getElementById"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,QAAA,0CCAlBF,EAAAC,QAAA,CAAkBE,KAAA,wCCDlBH,EAAAC,QAAiBG,EAAAC,EAAuB,wDCCxCL,EAAAC,QAAA,CAAkBK,kBAAA,oCAAAC,gBAAA,kCAAAC,sBAAA,wCAAAC,gBAAA,kCAAAC,sBAAA,iOCGHC,EAFIC,IAAMC,kDCEnBC,EAAY,WACdC,SAASC,cAAc,UAAUC,SAqCtBC,EAlCF,kBACTC,EAAAC,EAAAC,cAACC,EAAWC,SAAZ,KACK,SAACC,GAAD,OAEDL,EAAAC,EAAAC,cAAA,QAAMI,UAAWC,IAAOvB,KAAMwB,SAAWH,EAAQI,kBAE7CT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBAAhB,eACAN,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAOJ,UAAU,aAAaK,YAAY,MAAMC,UAAQ,IACpEZ,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mCAAlB,WAKJN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,0BACbN,EAAAC,EAAAC,cAAA,SAAOW,SAAWlB,EAAWe,KAAK,QAClCI,KAAK,QAAQC,MAAM,YAAYC,gBAAc,IAC7ChB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAHjB,sBAMAN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,0BACbN,EAAAC,EAAAC,cAAA,SAAOW,SAAWlB,EAAWe,KAAK,QAClCI,KAAK,QAAQC,MAAM,WACnBf,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAHjB,gDCvBVW,EAAW,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,MAAOC,EAAhBH,EAAgBG,YAAaC,EAA7BJ,EAA6BI,KAA7B,OAEbtB,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOpB,mBAElBa,EAAAC,EAAAC,cAAA,KAAGqB,KAAOD,EAAOE,OAAO,SAASC,IAAI,uBACjCzB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKN,EAAOO,IAAKR,EAAOb,UAAWC,IAAOnB,mBAGnDY,EAAAC,EAAAC,cAAA,OAAKI,UAAYC,IAAOlB,uBACpBW,EAAAC,EAAAC,cAAA,KAAGqB,KAAQD,EAAOE,OAAO,SAASC,IAAI,uBAClCzB,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAOjB,iBAAmB6B,IAE7CnB,EAAAC,EAAAC,cAAA,KAAGI,UAAWC,IAAOhB,uBACf8B,EAAYO,OAAS,IAArB,GAAAC,OAA8BR,EAAYS,MAAM,EAAG,KAAnD,MAA8DT,MAchFJ,EAASc,aAAe,CACpBX,aAAOY,EACPX,YAAa,6BAGFJ,QCWAgB,EA7CO,kBAClBjC,EAAAC,EAAAC,cAACC,EAAWC,SAAZ,KACK,SAACC,GAAD,OACGL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KAEIlC,EAAAC,EAAAC,cAAA,SAAIG,EAAQ8B,UACc,IAAzB9B,EAAQ+B,MAAMR,OAEX5B,EAAAC,EAAAC,cAAA,UAEIG,EAAQ+B,MAAMC,IAAI,SAAAnB,EAGXoB,GAHW,IACZC,EADYrB,EACZqB,GADYC,EAAAtB,EAEduB,WAActB,EAFAqB,EAEArB,MAAOE,EAFPmB,EAEOnB,YAAaqB,EAFpBF,EAEoBE,aAAcC,EAFlCH,EAEkCG,WAAYC,EAF9CJ,EAE8CI,SAF9C,OAKd5C,EAAAC,EAAAC,cAAC2C,EAAD,CACIC,IAAMP,EAAKD,EAAMS,WACjB5B,MAAQA,EACRC,MAAQsB,EAAaM,MACP,cAAeL,EACbA,EAAWM,UACXN,EAAWO,oBACbC,EACd9B,YAAcA,EACdC,KAAOsB,OAKnB,KAKJvC,EAAQ+C,UAEJpD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACf,SClCd+C,EAAY,CAChBjB,MAAO,GACPkB,QAAS,GACTF,WAAW,EACXG,cAAe,EACfpB,SAAU,GACVqB,UAAW,IAgHEC,6MA3GbC,qBACKL,KAIL5C,iBAAmB,SAACkD,GAElBA,EAAEC,iBAEFC,EAAKC,SAAST,GAEd,IAAMU,EAAC,MAAAlC,OAASmC,mBAAmBpE,SAASC,cAAc,oBAAoBkB,QACxEkD,EAAO,YAAApC,OAAejC,SAASC,cAAc,6BAA6BkB,OAC1EmD,EAAW,4DAAArC,OAA+DkC,GAA/DlC,OAAmEoC,GAIpFJ,EAAKC,SAAS,CACZV,WAAW,EACXE,QAASY,IAGXL,EAAKM,YAAYD,MAKnBC,YAAc,SAACb,GAGfc,IAAMC,IAAIf,GACPgB,KAAK,SAAAC,GAED,UAAWA,EAAIC,KAEhBX,EAAKC,SAAS,SAAAW,GAAS,MAAK,CAC1BrC,MAAK,GAAAP,OAAA6C,OAAAC,EAAA,EAAAD,CAAMD,EAAUrC,OAAhBsC,OAAAC,EAAA,EAAAD,CAA0BH,EAAIC,KAAKI,QACxCxB,WAAW,EACXG,cAAegB,EAAIC,KAAKK,WACxB1C,SAAQ,GAAAN,OAAK0C,EAAIC,KAAKK,WAAd,qBAKVhB,EAAKC,SAAS,CACZV,WAAW,EACXjB,SAAU,uBAKf2C,MAAO,SAAAC,GAENlB,EAAKC,SAAS,CACZN,UAAS,UAAA3B,OAAYkD,EAAMC,WAG7BC,WAAW,WACTpB,EAAKM,YAAYb,IAChB,UAKP4B,YAAc,WAEZ,GAAGrB,EAAKH,MAAMH,gBAAkBM,EAAKH,MAAMtB,MAAMR,SAAUiC,EAAKH,MAAMN,UAAtE,CAGA,IAAME,EAAO,GAAAzB,OAAMgC,EAAKH,MAAMJ,QAAjB,gBAAAzB,OAAuCgC,EAAKH,MAAMtB,MAAMR,QAErEiC,EAAKC,SAAS,CACZV,WAAW,IAGbS,EAAKM,YAAYb,6EAKjB,IAAM6B,EAAeT,OAAAU,EAAA,EAAAV,CAAA,GAChBW,KAAK3B,MADW,CAEnBjD,iBAAkB4E,KAAK5E,mBAGzB,OACET,EAAAC,EAAAC,cAACC,EAAWmF,SAAZ,CAAqBvE,MAAQoE,GAC3BnF,EAAAC,EAAAC,cAAA,OAAKI,UAAYC,IAAOxB,SACtBiB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAACsF,EAAD,oDAMW,IAAAC,EAAAJ,KAEjBK,OAAOC,iBAAiB,SAAU,WAC9BC,QAAQC,IAAIC,KAAKC,MAAML,OAAOM,YAAcN,OAAOO,SAAU,GAC7DL,QAAQC,IAAIjG,SAASsG,KAAKC,cACzBL,KAAKM,MAAMV,OAAOM,YAAcN,OAAOO,SAAW,GAAMrG,SAASsG,KAAKC,cAAgBV,EAAKP,gBAC7F,UAxGWzF,IAAM4G,WCZxBC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAAS5G,SAAS6G,eAAe","file":"static/js/main.2cbc411e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3JOml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__RgC28\"};","module.exports = __webpack_public_path__ + \"static/media/no-cover.7f8724d9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem__wrapper\":\"ListItem_listItem__wrapper__hRPaT\",\"listItem__image\":\"ListItem_listItem__image__2h4BG\",\"listItem__textWrapper\":\"ListItem_listItem__textWrapper__2uIwE\",\"listItem__title\":\"ListItem_listItem__title__1u9IK\",\"listItem__description\":\"ListItem_listItem__description__1qC6q\"};","import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React from 'react'\r\nimport styles from './Form.module.scss'\r\nimport AppContext from '../../Context'\r\n\r\nconst clickBtn =  () => {\r\n    document.querySelector(\"button\").click();\r\n}\r\n\r\nconst Form = () => (\r\n    <AppContext.Consumer>\r\n        {(context) => (\r\n\r\n        <form className={styles.form} onSubmit={ context.buildQueryString }>\r\n\r\n            <div className=\"input-group\">\r\n                <span className=\"input-group-addon\">Book title:</span>\r\n                <input type=\"text\" className=\"form-input\" placeholder=\"...\" required />\r\n                <button className=\"btn btn-primary input-group-btn\">\r\n                    Search\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"form-radio form-inline\">\r\n                    <input onChange={ clickBtn } type=\"radio\" \r\n                    name=\"order\" value=\"relevance\" defaultChecked />\r\n                    <i className=\"form-icon\"></i> \r\n                    Order by relevance\r\n                </label>\r\n                <label className=\"form-radio form-inline\">\r\n                    <input onChange={ clickBtn } type=\"radio\" \r\n                    name=\"order\" value=\"newest\" />\r\n                    <i className=\"form-icon\"></i> \r\n                    Order by newest\r\n                </label>\r\n            </div>\r\n\r\n        </form>\r\n        )}\r\n    </AppContext.Consumer> \r\n);\r\n\r\nexport default Form;","import React from 'react'\r\nimport styles from './ListItem.module.scss'\r\nimport PropTypes from 'prop-types';\r\nimport noCover from '../../assets/no-cover.jpg'\r\n\r\n\r\nconst ListItem = ({title, cover, description, link}) => (\r\n\r\n    <li className={styles.listItem__wrapper}>\r\n\r\n        <a href={ link } target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={cover} alt={title} className={styles.listItem__image} />\r\n        </a>\r\n\r\n        <div className={ styles.listItem__textWrapper }>\r\n            <a href= { link } target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h2 className={styles.listItem__title}>{ title }</h2>\r\n            </a>\r\n            <p className={styles.listItem__description}>\r\n                { description.length > 200 ? `${description.slice(0, 200)}..` : description }\r\n            </p>\r\n        </div>\r\n\r\n    </li>    \r\n);\r\n\r\nListItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    cover: PropTypes.string,\r\n    description: PropTypes.string,\r\n    link: PropTypes.string\r\n};\r\n\r\nListItem.defaultProps = {\r\n    cover: noCover,\r\n    description: 'No description available.'\r\n}\r\n\r\nexport default ListItem;","import React from 'react'\r\nimport AppContext from '../../Context'\r\nimport ListItem from './ListItem'\r\n\r\nconst SearchResults = () => ( \r\n    <AppContext.Consumer>\r\n        {(context) => (\r\n            <> \r\n                {/* render list depended on books array length */}\r\n                <p>{context.infoText}</p>\r\n                {context.books.length !== 0 ?\r\n                (\r\n                    <ul>\r\n                        {\r\n                        context.books.map((\r\n                            { id, \r\n                            volumeInfo: { title, description, readingModes, imageLinks, infoLink }\r\n                            }, index) =>(\r\n\r\n                            <ListItem \r\n                                key={ id + index.toString() }\r\n                                title={ title }\r\n                                cover={ readingModes.image ? \r\n                                            ( \"thumbnail\" in imageLinks ? \r\n                                                imageLinks.thumbnail : \r\n                                                imageLinks.smallThumbnail)\r\n                                            : undefined }\r\n                                description={ description }\r\n                                link={ infoLink }\r\n                            />\r\n\r\n                        ))}\r\n                    </ul>\r\n                ) : null\r\n                }\r\n                \r\n                {/* render loading div on send request */}\r\n                {\r\n                context.isLoading ? \r\n                (\r\n                    <div className=\"loading loading-lg\"></div>\r\n                ) : null\r\n                }\r\n            </>\r\n        )}\r\n    </AppContext.Consumer>\r\n    \r\n);\r\n\r\nexport default SearchResults;","import React from 'react'\nimport styles from './App.module.scss'\nimport AppContext from './Context'\nimport Axios from 'axios'\nimport Form from './components/form/Form'\nimport SearchResults from  './components/search-results/SearchResults'\n\nconst initState = {\n  books: [],\n  request: \"\",\n  isLoading: false,\n  numberOfBooks: 0,\n  infoText: \"\",\n  errorText: \"\"\n}\n\nclass App extends React.Component {\n\n  state = {\n    ...initState\n  }\n\n  \n  buildQueryString = (e) => {\n    {/* reset state and send new request when form parametrs is changed */}\n    e.preventDefault();\n\n    this.setState(initState);\n\n    const q = `&q=${encodeURIComponent(document.querySelector(\"input[type=text]\").value)}`;\n    const orderBy = `&orderBy=${document.querySelector(\"input[type=radio]:checked\").value}`;\n    const queryString = `https://www.googleapis.com/books/v1/volumes?maxResults=10${q}${orderBy}`\n\n    {/* save queryString to state and send request */}\n\n    this.setState({\n      isLoading: true,\n      request: queryString\n    })\n\n    this.sendRequest(queryString)\n    \n  }\n\n\n  sendRequest = (request) => {\n  {/* send async request and set app state based on response, resend request on error */}\n\n  Axios.get(request)\n    .then(res => {\n      \n      if(\"items\" in res.data){\n\n        this.setState(prevState => ({\n          books: [...prevState.books, ...res.data.items],\n          isLoading: false,\n          numberOfBooks: res.data.totalItems,\n          infoText: `${res.data.totalItems} results found`\n        }));\n\n      } else {\n\n        this.setState({\n          isLoading: false,\n          infoText: \"No results found\"\n        });\n\n      }\n    })\n    .catch( error => {\n \n      this.setState({\n        errorText: `Error: ${error.message}`\n      })\n\n      setTimeout(() => {\n        this.sendRequest(request)\n      }, 1000);\n      \n    })\n  }\n\n  getMoreData = () => {\n    {/* return if there are no more books in google library or on waiting for response */}\n    if(this.state.numberOfBooks === this.state.books.length || this.state.isLoading) return;\n\n    {/* add start index to query bades on books array lenght */}\n    const request = `${this.state.request}&startIndex=${this.state.books.length}`;\n\n    this.setState({\n      isLoading: true\n    })\n\n    this.sendRequest(request);\n  }\n\n  render() {\n\n    const contextElements = {\n      ...this.state,\n      buildQueryString: this.buildQueryString\n    }\n    \n    return (\n      <AppContext.Provider value={ contextElements }>\n        <div className={ styles.wrapper }>\n          <h1>Google books search</h1>\n          <Form />\n          <SearchResults />\n        </div>\n      </AppContext.Provider>\n    );\n  };\n\n  componentDidMount(){\n    {/* get more data if window is scrolled to bottom */}\n    window.addEventListener(\"scroll\", () => {\n        console.log(Math.round(window.innerHeight + window.scrollY) +1);\n        console.log(document.body.offsetHeight);\n        (Math.floor(window.innerHeight + window.scrollY) + 1) >= document.body.offsetHeight && this.getMoreData();\n    }, false);\n  };\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}